#include <ESP8266WiFi.h>
 
const char* ssid     = "*insert ssid here"; //Wifi Name
const char* password = "*insert password here"; //password
const char* host = "*insert local ip adress here"; //IP PC

const int trigPin = D3;
const int echoPin = D2;
const int PIN = D1;

long duration;
int distance;
//int heightofwater;
//setting the distance from sensor to water  in CentiMeters (may vary) 
//int sensortowater = 10000;


void setup() {
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
pinMode(PIN,OUTPUT);
  Serial.begin(9600);
 
 
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
 
  WiFi.begin(ssid, password);   //connecting the nodemcu into a WiFi by inputting SSID and password
 
  while (WiFi.status() != WL_CONNECTED) {       //shows a dot while the nodemcu is connecting
    delay(50);
    Serial.print(".");
  }
 
  Serial.println("");
  Serial.println("WiFi connected");  //wifi status indicator
  Serial.println("IP address: ");  //ip adress indicator
  Serial.println(WiFi.localIP());
}
 
void loop() {
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);
// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);
// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);
// Calculating the distance
distance= duration*0.034/2;
//setting the distance from the sensor my vary
//heightofwater = sensortowater - distance;

Serial.print("Distance to object (cm): ");    //the value of the distance between the sensor to the surface of water(not to be confused with height of water)



if (distance < 50){         //if the distance are below 50 the buzzer will turn on and spits alerting sound
  tone(PIN,1000);
  delay(1000);
  noTone(PIN);
  delay(1000);
}
 Serial.println(distance);
 
  Serial.print("connecting to ");
  Serial.println(host);


  WiFiClient client;
  const int httpPort = 80;   //porting to localhost
  if (!client.connect(host, httpPort)) {
    Serial.println("connection failed");
    return;
  }
 
  // We now create a URI for the request
  //change the variable to heightofwater once you've set the sensor to water
  String url = "/node_water/add.php?";
  url += "tinggi_air="; //where the data will be inputted
  url += distance;    //the data that is inputted
 
  Serial.print("Requesting URL: ");
  Serial.println(url);
 
  // This will send the request to the server
  client.print(String("GET ") + url + " HTTP/1.1\r\n" +
               "Host: " + host + "\r\n" +
               "Connection: close\r\n\r\n");
 
  unsigned long timeout = millis();
  while (client.available() == 0) {
    if (millis() - timeout > 5000) {
      Serial.println(">>> Client Timeout !");
      client.stop();
      return;
    }
  }
 
  // Read all the lines of the reply from server and print them to Serial
  while (client.available()) {
    String line = client.readStringUntil('\r');
    //Serial.print(line);
 
    if (line.indexOf("sukses gaes") != -1) {   //indicates that the data have succesfully inputted onto the database
      Serial.println();
      Serial.println("Yes, data masuk");
    } else if (line.indexOf("gagal gaes") != -1) {  //indicates that the data failed to be inputted onto the database
      Serial.println();
      Serial.println("Maaf, data gagal masuk");
      //digitalWrite(alarmPin, HIGH);
    }
  }
 
  Serial.println();
  Serial.println("closing connection");
  delay(3600000);  //this makes the nodeMCU uploads data in a 1 hour ratio
}
